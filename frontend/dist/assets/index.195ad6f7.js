(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const t of o.addedNodes)t.tagName==="LINK"&&t.rel==="modulepreload"&&l(t)}).observe(document,{childList:!0,subtree:!0});function a(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerpolicy&&(o.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?o.credentials="include":e.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function l(e){if(e.ep)return;e.ep=!0;const o=a(e);fetch(e.href,o)}})();function d(r,s,a){return window.go.backend.App.AddTask(r,s,a)}function u(r){return window.go.backend.App.DeleteTask(r)}function m(){return window.go.backend.App.GetTasks()}function p(r){return window.go.backend.App.MarkTaskCompleted(r)}document.addEventListener("DOMContentLoaded",async()=>{const r=document.getElementById("addButton"),s=document.getElementById("taskInput"),a=document.getElementById("dueDate"),l=document.getElementById("priority"),e=document.getElementById("taskList");if(!r||!s||!a||!l||!e){console.error("Element not found");return}const o=async()=>{try{const t=await m();console.log("Loaded tasks:",t),t.length===0?e.innerHTML="<li>No tasks available</li>":e.innerHTML=t.map(n=>`
                    <li class="${n.completed?"completed":""}">
                        ${n.name} - ${new Date(n.due_date).toLocaleString()} - Priority: ${n.priority}
                        <button class="deleteButton" onclick="deleteTask(${n.id})">Delete</button>
                        <button onclick="markAsCompleted(${n.id})">${n.completed?"Undo":"Complete"}</button>
                    </li>
                `).join("")}catch(t){console.error("Error loading tasks:",t)}};r.addEventListener("click",async()=>{const t=s.value.trim(),n=a.value,i=parseInt(l.value,10);if(t&&n&&!isNaN(i)&&i>=1&&i<=5)try{const c=new Date(n).toISOString();await d(t,c,i),s.value="",a.value="",l.value="",o()}catch(c){console.error("Error adding task:",c)}else alert("Please enter valid task details")}),window.deleteTask=async t=>{if(console.log("Attempting to delete task with ID:",t),confirm("Are you sure you want to delete this task?"))try{await u(t),console.log("Task deleted successfully"),o()}catch(n){console.error("Error deleting task:",n)}else console.log("Task deletion cancelled")},window.markAsCompleted=async t=>{try{await p(t),o()}catch(n){console.error("Error marking task as completed:",n)}},o()});
